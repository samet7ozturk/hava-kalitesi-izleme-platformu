services:
  postgres:
    image: timescale/timescaledb:latest-pg14
    container_name: timescaledb
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: air_quality
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: pass

  data-ingest-service:
    build: ./backend/data-ingest-service
    container_name: data_ingest
    ports:
      - "8082:8082"
    depends_on:
      - rabbitmq
    environment:
      SPRING_PROFILES_ACTIVE: docker

  anomaly-detector:
    build: ./backend/anomaly-detector
    container_name: anomaly_detector
    ports:
      - "8081:8081"
    depends_on:
      - rabbitmq
      - postgres
    environment:
      SPRING_PROFILES_ACTIVE: docker

  api-gateway:
    build: ./backend/api-gateway
    container_name: api_gateway
    depends_on:
      - postgres
      - anomaly-detector
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:80"
    depends_on:
      - api-gateway
      - anomaly-detector

volumes:
  pgdata:
